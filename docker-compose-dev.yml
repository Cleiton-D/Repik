version: "2.1"
services:
  # backend:
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./ssl:/certs:ro
  #   depends_on:
  #     database:
  #         condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://backend:3332/health"]
  #     interval: 10s
  #     timeout: 15s
  #     retries: 5
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend"]
      interval: 10s
      timeout: 15s
      retries: 5

  database:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: repik
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 15s
      retries: 5

  registry:
    image: registry:2
    command: ["/bin/sh", "/etc/docker/registry/init"]
    environment:
      REGISTRY_AUTH: token
      REGISTRY_AUTH_TOKEN_REALM: http://127.0.0.1:3333/registry/auth
      REGISTRY_AUTH_TOKEN_SERVICE: Authentication
      REGISTRY_AUTH_TOKEN_ISSUER: Issuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/server-cert.pem

      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server-cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/server-key.pem

      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: repik
          url: http://127.0.0.1:3333/registry/webhooks
          timeout: 2000ms
          threshold: 5
          backoff: 1s
          ignoredmediatypes:
            - application/octet-stream

    volumes:
       - ./ssl:/certs:ro
       - ./registry/config.yml:/etc/docker/registry/config.yml:ro
       - ./registry/init:/etc/docker/registry/init:ro

  proxy:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/certs:ro
    # depends_on:
    #   backend:
    #       condition: service_healthy
    ports:
      - 80:80
      - 443:443

